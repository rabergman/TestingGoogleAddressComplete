<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD41Q2EzMSSdo_8tyhFQ-qAumexQqK2DGE&libraries=places&callback=initAutocomplete" async defer></script>
<script type="text/javascript">
// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

// This example requires the Places library. Include the libraries=places
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD41Q2EzMSSdo_8tyhFQ-qAumexQqK2DGE&libraries=places">

var placeSearch, autocomplete;
var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
};

function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
        (document.getElementById('autocomplete')),
        { types: ['geocode'] });

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
}

function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
        }
    }
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
            var geolocation = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
                center: geolocation,
                radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
        });
    }
}
</script>

@model IEnumerable<GoogleAPI.Employee>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Phone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>

<div id="locationField">
    <input id="autocomplete" style="max-width:1000px;width:800px" placeholder="Enter your address" onFocus="geolocate()" type="text"></input>
</div>

<table id="address">
    <tr>
        <td class="label" style="color:black">Street address</td>
        <td class="slimField">
            <input class="field" id="street_number" disabled="true"></input>
        </td>
        <td class="wideField" colspan="2" style="max-width:1000px;width: 531px;">
            <input class="field" style="max-width:1000px;width: 531px;" id="route" disabled="true"></input>
        </td>
    </tr>
    <tr>
        <td class="label" style="color:black">City</td>
        <!-- Note: Selection of address components in this example is typical.
             You may need to adjust it for the locations relevant to your app. See
             https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
        -->
        <td class="wideField" colspan="3">
            <input class="field" id="locality" disabled="true"></input>
        </td>
    </tr>
    <tr>
        <td class="label" style="color:black">State</td>
        <td class="slimField">
            <input class="field" id="administrative_area_level_1" disabled="true"></input>
        </td>
        <td class="label" style="color:black">Zip code</td>
        <td class="wideField">
            <input class="field" id="postal_code" disabled="true"></input>
        </td>
    </tr>
    <tr>
        <td class="label" style="color:black">Country</td>
        <td class="wideField" colspan="3">
            <input class="field" id="country" disabled="true"></input>
        </td>
    </tr>
</table>